---
# common/tasks/main.yml

- name: Set fact with host's external IPv4 address
  set_fact:
    public_ipv4_address: "{{ansible_default_ipv4.address}}"
  when: public_ipv4_address is not defined or public_ipv4_address == ""
  tags:
    - hostname

- name: Set fact with host's external IPv6 address
  set_fact:
    public_ipv6_address: "{{ansible_default_ipv6.address | default()}}"
  when: public_ipv6_address is not defined or public_ipv6_address == ""
  tags:
    - hostname

# this is here at the top just in case proxies are required which are set in .bashrc
- name: Copy .bashrc
  template:
    src: "{{ files }}/root/.bashrc.j2"
    dest: /root/.bashrc
    owner: root
    group: root
    mode: '0600'
  tags:
    - env

- name: set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  tags:
    - hostname

- name: Add the host entry to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ public_ipv4_address }}  {{ inventory_hostname }}"
    state: present
  tags:
    - hostname

- name: Update the apt-get cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
    upgrade: dist
  register: apt_updated

- name: Remove useless packages from the cache
  apt:
    autoclean: yes
  when: apt_updated.changed is defined and apt_updated.changed

- name: Remove dependencies that are no longer required
  apt:
    autoremove: yes
  when: apt_updated.changed is defined and apt_updated.changed

- name: Install common packages
  apt:
    name:
      - bc
      - buthead
      - clamav
      - cron
      - curl
      - dnsutils
      - e2fslibs-dev
      - fail2ban
      - gawk
      - git
      - mailutils
      - iotop
      - less
      - libncurses5-dev
      - libpcre3-dev
      - libreadline-dev
      - libsasl2-dev
      - libsasl2-modules
      - libssl-dev
      - locales
      - logrotate
      - lsof
      - make
      - monit
      - mosh
      - mtr-tiny
      - ntpdate
      - openssl
      - perl
      - postfix
      - python-dev
      - python-pip
      - python-apt
      - python-mysqldb
      - python-keyczar
      - python3-software-properties
      - rcconf
      - rng-tools
      - rsync
      - screen
      - strace
      - sudo
      - tzdata
      - unzip
      - vim
      - zip
      - zlib1g-dev
      - apt-transport-https
      - expect
      - certbot
      - mc
      - htop
      - iftop
      - ethtool
    state: present

- name: Set /etc/localtime according to configuration
  file:
    src: "/usr/share/zoneinfo/{{ timezone }}"
    dest: /etc/localtime
    owner: root
    group: root
    state: link
  notify:
    - update tzdata
    - restart rsyslog
    - restart ssh
  when: ansible_os_family == "Debian"
  tags:
    - configuration
    - timezone

- name: set timezone
  timezone:
    name: "{{ timezone }}"
  notify:
    - update tzdata
    - restart rsyslog
    - restart ssh
  when: ansible_os_family == "Debian"
  tags:
    - configuration
    - timezone

- name: set locale.gen file
  locale_gen:
    name: "{{locale_lang}}"
    state: present
  when: ansible_os_family == "Debian"
  tags:
    - configuration
    - locale

- name: Set /etc/default/locale according to our configuration
  template:
    src: "{{ files }}/etc/default/locale.j2"
    dest: /etc/default/locale
  when: ansible_os_family == "Debian"
  tags:
    - configuration
    - locale

- name: Copy custom fail2ban jail.conf
  template:
    src: "{{ files }}/etc/fail2ban/jail.d/customisation.local.j2"
    dest: /etc/fail2ban/jail.d/customisation.local
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart fail2ban
  tags:
    - security
    - fail2ban

- name: Copy Mandrill postfix mail.cf
  template:
    src: "{{ files }}/etc/postfix/main.cf-mandrill.j2"
    dest: /etc/postfix/main.cf-mandrill
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart postfix
  when: mandrill_username is defined and mandrill_username != ""
  tags:
    - email
    - main.cf
    - mandrill

- name: Copy SendGrid postfix mail.cf
  template:
    src: "{{ files }}/etc/postfix/main.cf-sendgrid.j2"
    dest: /etc/postfix/main.cf-sendgrid
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart postfix
  when: sendgrid_username is defined and sendgrid_username != ""
  tags:
    - email
    - main.cf
    - sendgrid

- name: Copy Local postfix main.cf
  template:
    src: "{{ files }}/etc/postfix/main.cf-local.j2"
    dest: /etc/postfix/main.cf-local
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart postfix
  when: email_user_local is defined and email_user_local != ""
  tags:
    - email
    - main.cf
    - local-email

- name: Backup default mail.cf
  shell: mv /etc/postfix/main.cf /etc/postfix/main.cf-orig
  args:
    creates: /etc/postfix/main.cf-orig
  ignore_errors: yes
  tags:
    - email
    - main.cf

- name: Symlink to postfix mail.cf
  file:
    src: "/etc/postfix/main.cf-{{ mail_service }}"
    path: /etc/postfix/main.cf
    state: link
    owner: root
    group: root
  notify:
    - restart postfix
  tags:
    - email
    - main.cf

- name: Copy iptables startup script
  copy:
    src: "{{ files }}/etc/network/if-pre-up.d/iptables"
    dest: /etc/network/if-pre-up.d
    owner: root
    group: root
    mode: '0750'
  tags:
    - security
    - firewall

- name: Copy iptables shutdown script
  copy:
    src: "{{ files }}/etc/network/if-down.d/iptables_save"
    dest: /etc/network/if-down.d
    owner: root
    group: root
    mode: '0750'
  tags:
    - security
    - firewall

- name: Copy iptables config
  copy:
    src: "{{ files }}/etc/iptables.up.rules"
    dest: /etc/iptables.up.rules
    owner: root
    group: root
    mode: '0640'
  notify:
    - start firewall
  tags:
    - security
    - firewall

- name: Copy ntpdate cron
  copy:
    src: "{{ files }}/etc/cron.hourly/ntpdate"
    dest: /etc/cron.hourly
    owner: root
    group: root
    mode: '0750'
  tags:
    - ntpdate

- name: Copy crontab to change default launch of daily tasks from 6am to 1am for nginx webstats
  copy:
    src: "{{ files }}/etc/crontab"
    dest: /etc
    owner: root
    group: root
    mode: '0644'
  tags:
    - crontab

- name: Upload and apply network hardening rules.
  copy:
    src: "{{ files }}/usr/local/sbin/harden_ip.sh"
    dest: /usr/local/sbin
    owner: root
    group: root
    mode: '0750'
  notify:
    - harden IP stack
  tags:
    - security

- name: Set permissions on .ssh directory
  file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: '0700'
  tags:
    - security
    - ssh

- name: Create sftponly group for chroot'ed logins
  group:
    name: sftponly
    state: present
    system: yes
  tags:
    - security

- name: copy sshd_config file containing sftponly subsystem for chroot'ed logins
  template:
    src: "{{ files }}/etc/ssh/sshd_config.j2"
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart ssh
  tags:
    - security
    - ssh
    - sshd_config

- name: copy limits.conf to increase open file limits for nginx and mysql
  copy:
    src: "{{ files }}/etc/security/limits.conf"
    dest: /etc/security
    owner: root
    group: root
    mode: '0644'
  tags:
    - limits

- name: force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers
  tags:
    - firewall
    - security

- name: reboot after installation
  reboot:
  when: reboot_after_install == "yes"
  tags:
    - reboot
